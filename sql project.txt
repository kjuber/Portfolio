--1- write a query to print top 5 cities with highest spends and their percentage contribution of total credit card spends 

with cte as (
select *, dense_rank() over(order by total_sum desc) as rank_of_city,
sum(total_sum) over() as rolling_sum, round((total_sum*1.0/sum(total_sum) over())*100,6) as percentage_contribution
from (
select city, sum(cast(amount as bigint)) as total_sum from credit_card_transcations
group by city) as a)
select top 5 city,percentage_contribution from cte
order by percentage_contribution desc;
--******************************************************************************************

--2- write a query to print highest spend month and amount spent in that month for each card type

with cte as (select *, dense_rank() over(order by total_sum desc) as ranks from (
select DATEPART(month,transaction_date)  as months, sum(amount) as total_sum from credit_card_transcations
group by DATEPART(month,transaction_date) ) as a ), 
cte2 as (select * from cte where ranks<2)

select min(cte2.months )as Highest_spend_month ,c1.card_type,sum(c1.amount) as amount_spent from credit_card_transcations as c1 
inner join cte2  on DATEPART(month,c1.transaction_date)=cte2.months
group by c1.card_type;
--*****************************************************************************************************************************

--3- write a query to print the transaction details(all columns from the table) for each card type when
it reaches a cumulative of 1000000 total spends(We should have 4 rows in the o/p one for each card type)

with cte as (select *,sum (cast(amount as bigint) ) over(partition by card_type order by amount ) as sumx 
from credit_card_transcations), 
cte2 as(select *,sum(case when sumx>=1000000 then 1 else 0 end) over(partition by card_type order by sumx) as r_sum
from cte )

select * from cte2
where r_sum=1;
--************************************************************************************************************

--4- write a query to find city which had lowest percentage spend for gold card type

with cte as (
select city,card_type, sum(amount) as total_spend from credit_card_transcations
where card_type='Gold'group by city,card_type ), 
cte2 as (select *, (total_spend*1.0/sum( cast( total_spend as bigint)) over()) *100 as percentage from cte ),
cte3 as (select *, DENSE_RANK() over(order by percentage asc) as rnks from cte2)
select city,card_type,total_spend,percentage from cte3
where rnks=1;
--******************************************************************************

--5- write a query to print 3 columns:  city, highest_expense_type , lowest_expense_type (example format : Delhi , bills, Fuel)

with cte as (select city,exp_type, sum(amount)as total	 from credit_card_transcations
group by city,exp_type ),
cte2 as (select *, rank() over(partition by city order by total asc) as lowest,
rank() over(partition by city order by total desc) as highest from cte)
select city, max(case when highest=1 then exp_type end )as highest_expense_type
, max(case when lowest=1 then exp_type end )as lowest_expense_type
from cte2
where lowest=1 or highest=1
group by city;
--********************************************************************************************************************

--6- write a query to find percentage contribution of spends by females for each expense type

with total_expenses as (select distinct exp_type,sum(cast(amount as bigint)) over(partition by exp_type ) as summ 
from credit_card_transcations),
female_expenses as (select distinct exp_type,sum(cast(amount as bigint)) over(partition by exp_type ) as summ from credit_card_transcations
where gender='F')
select t1.exp_type,(t2.summ*1.0/t1.summ)*100 as percentage from total_expenses as t1 inner join female_expenses as t2 
on t1.exp_type=t2.exp_type;
--**************************************************************************************************

--7. during weekends which city has highest total spend to total no of transcations ratio 

with cte as (
select city, sum(amount) as tota_amount,count(1) over() as cc , sum(amount)*1.0/ count(1) over() as ratio
from credit_card_transcations
where datepart(weekday,transaction_date) in (6,7)
group by city)
select city from (
select *, rank() over(order by ratio desc) as rnk from cte) as  a 
where rnk=1;
--*********************************************************************************************************

--8- which card and expense type combination saw highest month over month growth in Jan-2014

with cte as (
select card_type,exp_type, datepart(month,transaction_date) as month_no, sum(amount) as am  from credit_card_transcations
where year(transaction_date)=2014
group by card_type,exp_type,datepart(month,transaction_date)
)  
select top 1 card_type,exp_type, prev from (select *, am-lag(am,1,am) over(partition by card_type,exp_type order by month_no ) as prev from cte) as a
order by prev desc;
--**********************************************************************************************************

--9which city took least number of days to reach its 500th transaction after the first transaction in that city

with cte as(
select *, row_number() over(partition by city order by transaction_date asc) as rn,count(1) over(partition by city) as cc
from  credit_card_transcations) , 
cte2 as (select * from cte where cc>=500 and rn =1 or rn =500),
cte3 as(select city, DATEDIFF(DAY, min(transaction_date) ,max(transaction_date))  as minn from cte2
group by city)
select city from (select *,ROW_NUMBER() over(order by minn ) as orders from  cte3
) as a 
where orders=1;
--****************************************************************************






























